1)	Starting with the 465 exons initially identified by Parul in “GRCh37_exon2-6kb_CNE500_rec_numbp50_final_div.tab”, I put all this information into an Excel spreadsheet. Then, using the “exons_hg19.txt”, “exons_hg38.txt”, “intergenic_5p_hg19.txt”, “intergenic_5p_hg38.txt”, “intergenic_3p_hg19.txt”, “intergenic_3p_hg38.txt” files given to us by Susanne, I swapped the hg19 coordinates for the exon, 5’, and 3’ regions to the hg38 coordinates for every given exon. I also did this for the start and end recombination positions using offset for each of those exons. This Excel spreadsheet was saved as “hg19_to_hg38_conversion.xlsx”, and the information in it was copied into “converted hg38.txt” and “converted_hg38_with_3_lines_removed.txt”, the latter having the 3 problematic exons with regions Susanne could not find a good match for in converting from hg19 to hg38 removed.

2)	Susanne then looked at these 465 human exons and attempted to find homologous regions in chimps and vervets. Out of the 465, she ultimately found 444 and gave those regions to us in the files “human_exons_hg38.txt”, “human_exons_pt2.txt”, and “human_exons_chlSab2.txt”. However, in the “human_exons_hg38.txt” file, she did not provide the names of the human genes these exons were a part of in. So, I put the original 465 human exons and these 444 homologous exons side by side in an Excel spreadsheet titled “parul_to_susanne_human_exon_matching.xlsx” and matched each of Susanne’s exons to the listing in the original list of 465 to find the 21 exons that Susanne didn’t find a match for. I then removed these lines and put the information in “homolgous_human_exons.txt”. With this file and the other two lists of 444 exons in chimps and vervets, I then ran the script “homologous_exon_finder.py” that looks through the vervet and UCSC exon annotations and attempts to match the regions Susanne provided with a specific exon. It outputs individual lists of exons for both vervets and chimps that are found to have a match (“chimp_homologous_exons_formatted.txt”, “chimp_homologous_exons_whole_annotation_line.txt”, “chimp_homologous_exons_with_relevant_exons.txt”, “vervet_homologous_exons_formatted.txt”, “vervet_homologous_exons_whole_annotation_line.txt”, “vervet_homologous_exons_with_relevant_exons.txt”) and then finds which of the 444 listings have matchings at the same line index in this file. If both have a match, that means that exons have been found in both vervets and chimps that are homologous to the human exon, and thus would be homologous to each other as well. 248 out of the 444 regions Susanne provided had this quality and are output in the “all_homo_exons_reference_exons_only.txt” file. The information in this file is then used to make the “248_homo_exons_reference_exons_only.xlsx” file that contains exon position information for all 248 pairs of homologous exons.

3)	With the exons found, I then tried to get the intergenic lengths. This was done using the scripts “get_intergenic_info_human.py” (output is “human_homo_intergenic_lengths.txt”), “get_intergenic_info_chimp.py” (outputs are “chimp_homo_intergenic_lengths.txt” and “chimp_all_intergenic_lengths.txt”), and “get_intergenic_info_vervet.py” (outputs are “vervet_homo_intergenic_lengths.txt” and  “vervet_all_intergenic_lengths.txt”). The information in these files was then manually pasted by hand into the Excel file “248_homo_exons_reference_with_intergenic_lengths.xlsx”, and then the information in the Excel file was copied into “248_homo_exons_reference_with_intergenic_lengths.txt”.

4)	With the intergenic lengths found, we could begin getting recombination and divergence values for the homologous regions for chimps and vervets (as Parul had already found them for humans). However, to get divergence values for vervets, I had to figure out what the ancestral alleles were. To do this, I needed to get alignments for the vervet, vervet-human ancestral, and vervet-human-marmoset ancestral sequences and determine the ancestral allele. The aligned sequences are contained within the 13 primates EPO files, and I used the script “find_vervet_alingments.py” to output the nucleotides for each of those three sequences, as well as the human nucleotide, at every position in the vervet genome present in the alignment (dubbed “post alignment files”). Another set of files was created using the script “add_ancestral_and_masking_info.py” with all of the same information with additional columns for the calculated ancestral allele, whether or not the vervet nucleotide is diverged from it, and whether or not the site is callable based on the mask file. Lastly, for the purposes of calculating divergence, another file was created using the script “find_sites_that_differ.py” that simply finds all positions within the post alignment files where one or all of the three nucleotides needed to calculate the ancestral nucleotide are different. To calculate the ancestral allele at any particular site, Susanne provided the following rules:
“(a) = vervet-human ancestral sequence, (b) = vervet, (c) = vervet-human-marmoset ancestral sequence

•	uppercase when all 3 --(a), (b) and (c)-- sequences agree
•	lowercase when:
-	there is no ancestral sequence for the ancestral sequence, i.e. there are only two extant sequences in the alignment, but (a) and (b) agree.
-	there is a gap in the sister sequence, but (a) and (c) agree.
-	either (b) or (c) disagree with (a), but not both.
•	“N” when both (b) and (c) disagree with (a)
•	“-“ (dash) when no there is no ancestral allele, this is a lineage-specific insertion
•	“.” (dot) when there is no alignment, i.e. no data”

5)	With the vervet alignment and ancestral alleles obtained, I calculated the divergence values for chimps and vervets using the scripts “find_divergence_chimp.py” (outputs are “chimp_homo_exons_divergence.txt” and “chimp_all_exons_divergence.txt”) and “find_divergence_vervet.py” (outputs are “vervet_homo_exons_divergence.txt” and “vervet_all_exons_divergence.txt”).

6)	I calculated recombination for chimps and vervets in two different ways, both involving me taking a rate across the region spanning from the start of one flanking intergenic region to the end of the other. The first method had me taking weighted averages across the various rate windows in the rate map that a region spanned. The scripts for this method are “find_recombination_chimp_weighted_average.py” (outputs are “chimp_homo_exons_recombination_weighted_average.txt” and “chimp_all_recombination_weighted_average.txt”) and “find_recombination_vervet_weighted_average.py” (outputs are “vervet_homo_exons_recombination_weighted_average.txt” and “vervet_all_recombination_weighted_average.txt”). For the second method, I followed Susanne’s instructions by using linear interpolation with the rate map listings closest to the start and end of the region. Additionally, this script looked for any potential chromosomal inversions that would be evidenced by a 4Ner value that declined from its previous value in the map. (though none were found). The scripts for this method are “find_recombination_chimp_interpolation.py” (outputs are “chimp_homo_exons_recombination_interpolation.txt” and “chimp_all_recombination_interpolation.txt”) and “find_recombination_vervet_interpolation py” (outputs are “vervet_homo_exons_recombination_interpolation.txt” and “vervet_all_recombination_weighted_interpolation.txt”). 

7)	With the divergence and recombination values for chimps and vervets found, the information from all of those output files was then manually pasted by hand into the Excel file “248_homo_exons_reference_all_info.xlsx”, and then the information in that Excel file was copied into “248_homo_exons_reference_all_info.txt”.

8)	Using “248_homo_exons_reference_all_info.txt”, the 248 homologous exons pairs were thinned out using the script “thin_homo_exons_with_various_filters.py” containing various filters. If an exon in at least one of the three species was removed, then the exons for the other two would be removed as well. Once filtered, the information for every exon present in the “248_homo_exons_reference_all_info.txt” file that was not removed was output to a final new file “FILTERED_homo_exons_reference_all_info.txt” These filters include removing…
a.	any exons with a “NA” listing in their exonic or intergenic regions 
b.	any chimp or vervet exons deemed unusable due to them having multiple listings in the UCSC annotations
c.	any chimp or vervet exons coinciding with a chromosomal inversion
d.	any vervet exons aligned with multiple human gene duplicates, having missing alignment data in the exon region, or having no marmoset alignment in the exon region and thus having no vervet-human-marmoset ancestral sequence to use in the calculation of the ancestral allele
e.	any chimp or vervet exons having intergenic lengths less than 75% the length of their corresponding human counterparts
f.	any chimp or vervet exons vervet that, according to the Ensembl BioMart information, did not have a gene order conservation (GOC) score of 100, a homology type of one to one, or an orthology confidence of 1. 

9)	With this newly curated set of exons, all of the exon length, intergenic length, divergence, and recombination rate correlations were made using the scripts “graph_exon_length_correlations.py”, “graph_intergenic_length_correlations.py”, “graph_divergence_correlations.py”, and “graph_recombination_correlations.py”.

10)	The recombination and divergence distributions for both all regions and homologous regions were made using the scripts “graph_divergence_distributions.py” and “graph_recombination_distribtutions.py” to see how well the distributions match.
